<!-- 
Copyright (c) 2011, Cory Cowgill
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 -->
<apex:component controller="GoogleDashboardController">
	<apex:attribute name="dashboardName" assignTo="{!dashboardName}" description="This is the value for the dashboard to display" type="String" required="true"/>
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>
	<script type="text/javascript">
    
      // Load the Visualization API and the piechart package.
      google.load('visualization', '1', {'packages':['corechart']});
      google.load('visualization', '1', {packages:['table']});
      
      
      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(drawChart);
      
      // Callback that creates and populates a data table, 
      // instantiates the pie chart, passes in the data and
      // draws it.
      var data;
      
      function init()
      {
      	data = new google.visualization.DataTable();
	    data.addColumn('string','{!dashboard.dashConfig.Group_By_Field__c}')
      	data.addColumn('number', '{!dashboard.dashConfig.Group_By_Field_Label__c}');
      }
      
      function drawChart() {

      // Create our data table.
	    data = new google.visualization.DataTable();
	    data.addColumn('string','{!dashboard.dashConfig.Group_By_Field__c}');
      	data.addColumn('number', '{!dashboard.dashConfig.Group_By_Field_Label__c}');
      	<apex:repeat value="{!dashboard.recs}" var="agg">
    	     data.addRow(['{!agg.field_name}',{!agg.num}]);
        </apex:repeat>
      // Instantiate and draw our chart, passing in some options.
      var chart;
      if('{!dashboard.dashConfig.Dashboard_Type__c}' == 'Pie') 
      {
      	chart = new google.visualization.PieChart(document.getElementById('chart_div{!dashboardName}'));
      }else if('{!dashboard.dashConfig.Dashboard_Type__c}' == 'Bar')
      {
      	chart = new google.visualization.BarChart(document.getElementById('chart_div{!dashboardName}'));
      }else if('{!dashboard.dashConfig.Dashboard_Type__c}' == 'Table')
      {
      	chart = new google.visualization.Table(document.getElementById('chart_div{!dashboardName}'));
      }
      chart.draw(data, {width: 450, height: 260,"title":"{!dashboard.dashConfig.Name}"});
      }
      
      init();
    </script>
    <script>drawChart();</script>
    <apex:outputText style="font-weight:bold;" rendered="{!dashboard.dashConfig.Dashboard_Type__c == 'Table'}" value="{!dashboard.dashConfig.Name}"/><br/>
    <div id="chart_div{!dashboardName}"></div>
    <a href="{!dashboard.dashConfig.Dashboard_Link__c}"><apex:outputText value="Dashboard Link"/></a>
</apex:component>